version: '3.8'
services:
  backend:
    container_name: backend
    hostname: backend
    image: backend
    build:
      context: ./requirements/backend
      dockerfile: Dockerfile
    depends_on:
      - db
    networks:
      - camagru
    ports:
      - "3000:3000"
    restart: on-failure
    volumes:
      - shared_datas:/usr/share/nginx/html

  frontend:
    container_name: frontend
    hostname: frontend
    image: frontend
    build:
      context: ./requirements/frontend
      dockerfile: Dockerfile
    networks:
      - camagru
    restart: on-failure
    volumes:
      - shared_datas:/usr/share/nginx/html

  nginx:
    container_name: nginx
    hostname: nginx
    image: nginx
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    depends_on:
      - frontend
    networks:
      - camagru
    ports:
      - "1505:80"
    restart: on-failure
    volumes:
      - shared_datas:/usr/share/nginx/html

#------------------------------DATABASE------------------------------#
  db:
    container_name: db
    hostname: db
    image: db
    build:
      context: ./requirements/db
      dockerfile: Dockerfile
    environment:
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_DATABASE: camagru
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    networks:
      - camagru
    restart: on-failure
    volumes:
      - db_data:/var/lib/db/data

  phpmyadmin:
    container_name: phpmyadmin
    hostname: phpmyadmin
    image: phpmyadmin
    build:
      context: ./requirements/phpmyadmin
      dockerfile: Dockerfile
    depends_on:
      - db
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
    networks:
      - camagru
    ports:
      - "5555:80"
    restart: on-failure
    volumes:
      - phpmyadmin_data:/var/www/html

#------------------------------NETWORKS------------------------------#
networks:
  camagru:
    driver: bridge

#------------------------------VOLUMES------------------------------#
volumes:
  phpmyadmin_data:
    driver: local
  db_data:
    driver: local
  shared_datas:
    driver: local